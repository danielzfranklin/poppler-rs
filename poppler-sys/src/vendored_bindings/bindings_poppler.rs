/* automatically generated by rust-bindgen */

use crate::dep_types::*;
use crate::poppler::*;

pub type guint16 = ::std::os::raw::c_ushort;
extern "C" {
    pub fn poppler_error_quark() -> GQuark;
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerError {
    POPPLER_ERROR_INVALID = 0,
    POPPLER_ERROR_ENCRYPTED = 1,
    POPPLER_ERROR_OPEN_FILE = 2,
    POPPLER_ERROR_BAD_CATALOG = 3,
    POPPLER_ERROR_DAMAGED = 4,
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerPageTransitionType {
    POPPLER_PAGE_TRANSITION_REPLACE = 0,
    POPPLER_PAGE_TRANSITION_SPLIT = 1,
    POPPLER_PAGE_TRANSITION_BLINDS = 2,
    POPPLER_PAGE_TRANSITION_BOX = 3,
    POPPLER_PAGE_TRANSITION_WIPE = 4,
    POPPLER_PAGE_TRANSITION_DISSOLVE = 5,
    POPPLER_PAGE_TRANSITION_GLITTER = 6,
    POPPLER_PAGE_TRANSITION_FLY = 7,
    POPPLER_PAGE_TRANSITION_PUSH = 8,
    POPPLER_PAGE_TRANSITION_COVER = 9,
    POPPLER_PAGE_TRANSITION_UNCOVER = 10,
    POPPLER_PAGE_TRANSITION_FADE = 11,
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerPageTransitionAlignment {
    POPPLER_PAGE_TRANSITION_HORIZONTAL = 0,
    POPPLER_PAGE_TRANSITION_VERTICAL = 1,
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerPageTransitionDirection {
    POPPLER_PAGE_TRANSITION_INWARD = 0,
    POPPLER_PAGE_TRANSITION_OUTWARD = 1,
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerSelectionStyle {
    POPPLER_SELECTION_GLYPH = 0,
    POPPLER_SELECTION_WORD = 1,
    POPPLER_SELECTION_LINE = 2,
}
impl PopplerPrintFlags {
    pub const POPPLER_PRINT_ALL: PopplerPrintFlags = PopplerPrintFlags::POPPLER_PRINT_MARKUP_ANNOTS;
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerPrintFlags {
    POPPLER_PRINT_DOCUMENT = 0,
    POPPLER_PRINT_MARKUP_ANNOTS = 1,
    POPPLER_PRINT_STAMP_ANNOTS_ONLY = 2,
}
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerFindFlags {
    POPPLER_FIND_DEFAULT = 0,
    POPPLER_FIND_CASE_SENSITIVE = 1,
    POPPLER_FIND_BACKWARDS = 2,
    POPPLER_FIND_WHOLE_WORDS_ONLY = 4,
    POPPLER_FIND_IGNORE_DIACRITICS = 8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerDocument {
    _unused: [u8; 0],
}
pub type PopplerDocument = _PopplerDocument;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerIndexIter {
    _unused: [u8; 0],
}
pub type PopplerIndexIter = _PopplerIndexIter;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerFontsIter {
    _unused: [u8; 0],
}
pub type PopplerFontsIter = _PopplerFontsIter;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerLayersIter {
    _unused: [u8; 0],
}
pub type PopplerLayersIter = _PopplerLayersIter;
pub type PopplerPoint = _PopplerPoint;
pub type PopplerRectangle = _PopplerRectangle;
pub type PopplerTextAttributes = _PopplerTextAttributes;
pub type PopplerColor = _PopplerColor;
pub type PopplerLinkMapping = _PopplerLinkMapping;
pub type PopplerPageTransition = _PopplerPageTransition;
pub type PopplerImageMapping = _PopplerImageMapping;
pub type PopplerFormFieldMapping = _PopplerFormFieldMapping;
pub type PopplerAnnotMapping = _PopplerAnnotMapping;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerPage {
    _unused: [u8; 0],
}
pub type PopplerPage = _PopplerPage;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerFontInfo {
    _unused: [u8; 0],
}
pub type PopplerFontInfo = _PopplerFontInfo;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerLayer {
    _unused: [u8; 0],
}
pub type PopplerLayer = _PopplerLayer;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerPSFile {
    _unused: [u8; 0],
}
pub type PopplerPSFile = _PopplerPSFile;
pub type PopplerAction = _PopplerAction;
pub type PopplerDest = _PopplerDest;
pub type PopplerActionLayer = _PopplerActionLayer;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerFormField {
    _unused: [u8; 0],
}
pub type PopplerFormField = _PopplerFormField;
pub type PopplerAttachment = _PopplerAttachment;
pub type PopplerMovie = _PopplerMovie;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerMedia {
    _unused: [u8; 0],
}
pub type PopplerMedia = _PopplerMedia;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnot {
    _unused: [u8; 0],
}
pub type PopplerAnnot = _PopplerAnnot;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotMarkup {
    _unused: [u8; 0],
}
pub type PopplerAnnotMarkup = _PopplerAnnotMarkup;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotText {
    _unused: [u8; 0],
}
pub type PopplerAnnotText = _PopplerAnnotText;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotTextMarkup {
    _unused: [u8; 0],
}
pub type PopplerAnnotTextMarkup = _PopplerAnnotTextMarkup;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotFreeText {
    _unused: [u8; 0],
}
pub type PopplerAnnotFreeText = _PopplerAnnotFreeText;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotFileAttachment {
    _unused: [u8; 0],
}
pub type PopplerAnnotFileAttachment = _PopplerAnnotFileAttachment;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotMovie {
    _unused: [u8; 0],
}
pub type PopplerAnnotMovie = _PopplerAnnotMovie;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotScreen {
    _unused: [u8; 0],
}
pub type PopplerAnnotScreen = _PopplerAnnotScreen;
pub type PopplerAnnotCalloutLine = _PopplerAnnotCalloutLine;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotLine {
    _unused: [u8; 0],
}
pub type PopplerAnnotLine = _PopplerAnnotLine;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotCircle {
    _unused: [u8; 0],
}
pub type PopplerAnnotCircle = _PopplerAnnotCircle;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerAnnotSquare {
    _unused: [u8; 0],
}
pub type PopplerAnnotSquare = _PopplerAnnotSquare;
pub type PopplerQuadrilateral = _PopplerQuadrilateral;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerStructureElement {
    _unused: [u8; 0],
}
pub type PopplerStructureElement = _PopplerStructureElement;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerStructureElementIter {
    _unused: [u8; 0],
}
pub type PopplerStructureElementIter = _PopplerStructureElementIter;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PopplerTextSpan {
    _unused: [u8; 0],
}
pub type PopplerTextSpan = _PopplerTextSpan;
#[repr(u32)]
#[non_exhaustive]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum PopplerBackend {
    POPPLER_BACKEND_UNKNOWN = 0,
    POPPLER_BACKEND_SPLASH = 1,
    POPPLER_BACKEND_CAIRO = 2,
}
extern "C" {
    pub fn poppler_get_backend() -> PopplerBackend;
}
extern "C" {
    pub fn poppler_get_version() -> *const ::std::os::raw::c_char;
}
